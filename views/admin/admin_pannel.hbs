<!-- Side Navbar -->

<div class="">
    <section>
        <div class="flex flex-col p-4">
            <div class="mt-4 grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
                <div class="flex items-start rounded-xl bg-white p-4 shadow-lg">
                    <div
                        class="flex h-12 w-12 items-center justify-center rounded-full border border-blue-100 bg-blue-50">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                        </svg>
                    </div>
                    <a href="/admin/users">
                        <div class="ml-4">
                            <h2 class="font-semibold">{{allUsers}} Users</h2>
                            <p class="text-sm text-gray-500">Last opened 4 days ago</p>
                        </div>
                    </a>
                </div>

                <div class="flex items-start rounded-xl bg-white p-4 shadow-lg">
                    <div
                        class="flex h-12 w-12 items-center justify-center rounded-full border border-orange-100 bg-orange-50">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-orange-400" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                    </div>

                    <a href="/admin/getProduct">
                        <div class="ml-4">
                            <h2 class="font-semibold">{{productCount}} Products</h2>
                            <p class="mt-2 text-sm text-gray-500">Last checked 3 days ago</p>
                        </div>
                    </a>
                </div>
                <div class="flex items-start rounded-xl bg-white p-4 shadow-lg">
                    <div
                        class="flex h-12 w-12 items-center justify-center rounded-full border border-red-100 bg-red-50">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-400" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                        </svg>
                    </div>
                    <a href="/admin/orders">
                        <div class="ml-4">
                            <h2 class="font-semibold">{{ordersCount}} Orders</h2>
                            <p class="mt-2 text-sm text-gray-500">Last authored 1 day ago</p>
                        </div>
                    </a>
                </div>
                <div class="flex items-start rounded-xl bg-white p-4 shadow-lg">
                    <div
                        class="flex h-12 w-12 items-center justify-center rounded-full border border-indigo-100 bg-indigo-50">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-indigo-400" fill="none"
                            viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                        </svg>
                    </div>

                    <a href="/admin/transactions">
                        <div class="ml-4">
                            <h2 class="font-semibold">{{transactions}} Transactions</h2>
                            <p class="mt-2 text-sm text-gray-500">Last commented 8 days ago</p>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </section>
    <section class="bg-white py-5 mx-3">
        <div class="row">
            <div class="col-lg-7">
                <canvas id="bar-chart"></canvas>
            </div>
            <div class="col-lg-5">
                <div class="my-6 py-5">
                    <div class="my-4"></div>
                </div>
                <canvas id="circle-chart"></canvas>
            </div>
        </div>
    </section>
    <!-- Statistics Section-->

</div>

<script>
    let monthName = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    let monthlyProfit = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    let weekly = [0, 0, 0, 0, 0, 0, 0]

    let weekName = ["Sunday", "Monday", "Tuesday", "WednesDay", "Thursday", "Friday", "Saturday"]
    let barChart = document.getElementById("bar-chart").getContext('2d')
    let circleChart = document.getElementById("circle-chart").getContext('2d')

    document.addEventListener('DOMContentLoaded', () => {
        fetch('/admin/getChardData', {
            method: 'get',
            credentials: 'include',
            headers: { 'Content-Type': 'application/json' }
        }).then(res => res.json()).then(res => {
            let { data, weeklyReport } = res;
            console.log(weeklyReport)
            for (i = 0; i < data.length; ++i) {

                switch (data[i].month) {
                    case 1:
                        monthlyProfit[0] = data[i].total
                        break;
                    case 2:
                        monthlyProfit[1] = data[i].total
                        break;
                    case 3:
                        monthlyProfit[2] = data[i].total
                        break;
                    case 4:
                        monthlyProfit[3] = data[i].total
                        break;
                    case 5:
                        monthlyProfit[4] = data[i].total
                        break;
                    case 6:
                        monthlyProfit[5] = data[i].total
                        break;
                    case 7:
                        monthlyProfit[6] = data[i].total
                        break;
                    case 8:
                        monthlyProfit[7] = data[i].total
                        break;
                    case 9:
                        monthlyProfit[8] = data[i].total
                        break;
                    case 10:
                        monthlyProfit[9] = data[i].total
                        break;
                    case 11:
                        monthlyProfit[10] = data[i].total
                        break;
                    case 12:
                        monthlyProfit[11] = data[i].total
                        break;
                }
            }
            console.log(monthlyProfit)
            const months = monthName;

            const data1 = {
                labels: months,
                datasets: [{
                    label: 'Monthly sales',
                    backgroundColor: "blue",
                    borderColor: 'rgb(255, 99, 132)',
                    data: monthlyProfit,
                }]
            };

            const monthlyconfig = {
                type: 'bar',
                data: data1,
                options: {}
            };
            let chart1 = new Chart(barChart, monthlyconfig)



            for (i = 0; i < weeklyReport.length; ++i) {

                switch (weeklyReport[i].date) {

                    case 1:
                        weekly[0] = weeklyReport[i].total
                        break;
                    case 2:
                        weekly[1] = weeklyReport[i].total
                        break;
                    case 3:
                        weekly[2] = weeklyReport[i].total
                        break;
                    case 4:
                        weekly[3] = weeklyReport[i].total
                        break;
                    case 5:
                        weekly[4] = weeklyReport[i].total
                        break;
                    case 6:
                        weekly[5] = weeklyReport[i].total
                        break;
                    case 7: weekly[6] = weeklyReport[i].total
                        break;
                }
            }

            //weekly sales
            const labels = weekName;

            const data2 = {
                labels: labels,
                datasets: [{
                    label: 'Weekly sales',
                    backgroundColor: 'green',
                    borderColor: 'green',
                    data: weekly,
                }]
            };

            const config = {
                type: 'line',
                data: data2,
                options: {}
            };

            let chart2 = new Chart(circleChart, config)



        })
    })

    console.log(barChart)
    // const configBar = {
    //     type: 'bar',
    //     data: {
    //         labels: [
    //             'January',
    //             'February',
    //             'March',
    //             'April',
    //             'May',
    //             'June',
    //             'July',
    //             'August',
    //             'September',
    //             'October',
    //             'November',
    //             'December'
    //         ],
    //         datasets: [{
    //             label: 'haai',
    //             data: [123, 123, 345, 32, 123, 36, 123, 123, 36, 123, 36, 123]
    //         }],
    //         backgroundColor: [
    //             'rgba(255, 99, 132, 0.2)',
    //             'rgba(255, 159, 64, 0.2)',
    //             'rgba(255, 205, 86, 0.2)',
    //             'rgba(75, 192, 192, 0.2)',
    //             'rgba(54, 162, 235, 0.2)',
    //             'rgba(153, 102, 255, 0.2)',
    //             'rgba(201, 203, 207, 0.2)',
    //             'rgba(255, 99, 132, 0.2)',
    //             'rgba(255, 159, 64, 0.2)',
    //             'rgba(255, 205, 86, 0.2)',
    //             'rgba(153, 102, 255, 0.2)',
    //             'rgba(201, 203, 207, 0.2)',
    //         ],
    //         borderColor: [
    //             'rgba(255, 99, 132, 0.2)',
    //             'rgba(255, 159, 64, 0.2)',
    //             'rgba(255, 205, 86, 0.2)',
    //             'rgba(75, 192, 192, 0.2)',
    //             'rgba(54, 162, 235, 0.2)',
    //             'rgba(153, 102, 255, 0.2)',
    //             'rgba(201, 203, 207, 0.2)',
    //             'rgba(255, 99, 132, 0.2)',
    //             'rgba(255, 159, 64, 0.2)',
    //             'rgba(255, 205, 86, 0.2)',
    //             'rgba(153, 102, 255, 0.2)',
    //             'rgba(201, 203, 207, 0.2)',
    //         ],
    //     }
    // };

    // const configSircle = {
        // type: 'line',
        // data: {
        //     labels: [
        //         'January',
        //         'February',
        //         'March',
        //         'April',
        //         'May',
        //         'June',
        //         'July',
        //         'August',
        //         'September',
        //         'October',
        //         'November',
        //         'December'
        //     ],
        //     datasets: [{
        //         label: 'haai',
        //         data: [123, 123, 345, 32, 123, 36, 123, 123, 36, 123, 36, 123]
        //     }],
        // }
    // };

</script>